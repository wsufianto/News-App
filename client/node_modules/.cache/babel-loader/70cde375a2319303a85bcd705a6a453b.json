{"ast":null,"code":"import _regeneratorRuntime from\"/Users/wsufianto/Documents/JWD/Coding/Learn-React/react-todolist/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/wsufianto/Documents/JWD/Coding/Learn-React/react-todolist/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/wsufianto/Documents/JWD/Coding/Learn-React/react-todolist/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import axios from'axios';var useFetch=function useFetch(urlLink){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),errMessage=_useState6[0],setErrMessage=_useState6[1];useEffect(function(){var source=axios.CancelToken.source();var getNews=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(urlLink,{cancelToken:source.token});case 3:response=_context.sent;setData(response.data);setIsLoading(false);setErrMessage('');_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);if(axios.isCancel(_context.t0)){console.log('fetch cancelled!');}else{setIsLoading(false);setErrMessage(_context.t0.message);}case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function getNews(){return _ref.apply(this,arguments);};}();getNews();// console.log(\"Use Effect in use!\")\nreturn function(){// console.log(\"Cleanup\")\nsource.cancel();};},[urlLink]);return{data:data,setData:setData,isLoading:isLoading,errMessage:errMessage};};export default useFetch;","map":{"version":3,"sources":["/Users/wsufianto/Documents/JWD/Coding/Learn-React/react-todolist/client/src/Helpers/useFetch.js"],"names":["useState","useEffect","axios","useFetch","urlLink","data","setData","isLoading","setIsLoading","errMessage","setErrMessage","source","CancelToken","getNews","get","cancelToken","token","response","isCancel","console","log","message","cancel"],"mappings":"ujBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,OAAD,CAAa,CAC5B,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACA,eAAkCN,QAAQ,CAAC,IAAD,CAA1C,yCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAAoCR,QAAQ,CAAC,EAAD,CAA5C,yCAAOS,UAAP,eAAmBC,aAAnB,eAEAT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,MAAM,CAAGT,KAAK,CAACU,WAAN,CAAkBD,MAAlB,EAAf,CAEA,GAAME,CAAAA,OAAO,0FAAG,sLAEWX,CAAAA,KAAK,CAACY,GAAN,CAAUV,OAAV,CAAmB,CACxCW,WAAW,CAAEJ,MAAM,CAACK,KADoB,CAAnB,CAFX,QAENC,QAFM,eAKZX,OAAO,CAACW,QAAQ,CAACZ,IAAV,CAAP,CACAG,YAAY,CAAC,KAAD,CAAZ,CACAE,aAAa,CAAC,EAAD,CAAb,CAPY,+EASZ,GAAIR,KAAK,CAACgB,QAAN,aAAJ,CAAyB,CACvBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACD,CAFD,IAEO,CACLZ,YAAY,CAAC,KAAD,CAAZ,CACAE,aAAa,CAAC,YAAIW,OAAL,CAAb,CACD,CAdW,oEAAH,kBAAPR,CAAAA,OAAO,0CAAb,CAiBAA,OAAO,GACP;AAEA,MAAO,WAAM,CACX;AACAF,MAAM,CAACW,MAAP,GACD,CAHD,CAID,CA3BQ,CA2BN,CAAClB,OAAD,CA3BM,CAAT,CA6BA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAQC,OAAO,CAAPA,OAAR,CAAiBC,SAAS,CAATA,SAAjB,CAA4BE,UAAU,CAAVA,UAA5B,CAAP,CACD,CAnCD,CAqCA,cAAeN,CAAAA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst useFetch = (urlLink) => {\n  const [data, setData] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [errMessage, setErrMessage] = useState('')\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n\n    const getNews = async () => {\n      try {\n        const response = await axios.get(urlLink, {\n          cancelToken: source.token\n        })\n        setData(response.data)\n        setIsLoading(false)\n        setErrMessage('')\n      } catch(err) {\n        if (axios.isCancel(err)) {\n          console.log('fetch cancelled!')\n        } else {\n          setIsLoading(false)\n          setErrMessage(err.message)\n        }\n      } \n    }\n    getNews()\n    // console.log(\"Use Effect in use!\")\n\n    return () => {\n      // console.log(\"Cleanup\")\n      source.cancel()\n    }  \n  }, [urlLink])\n\n  return { data, setData, isLoading, errMessage }\n}\n\nexport default useFetch"]},"metadata":{},"sourceType":"module"}